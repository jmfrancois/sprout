import{j as e}from"./jsx-runtime-Nms4Y4qS.js";import{f as Q}from"./index-CjQa9iMn.js";import{A as U}from"./Avatar-D105TCB5.js";import{B as x}from"./Badge-CG3Cu-RO.js";import{g as T}from"./figma-DdOIv0jn.js";import{c as Y,B as c}from"./Box-Bo_17ADl.js";import{r as ee}from"./index-BwDkhjyp.js";import{I as ae}from"./IconButton-DS1yKSJq.js";import{T as te}from"./Tooltip-Cu6rj0j6.js";const ne="_tag_2ivt6_1",re="_tag_text_2ivt6_14",se="_error_2ivt6_19",oe="_info_2ivt6_24",ie="_warning_2ivt6_29",le="_success_2ivt6_34",me="_tag_small_2ivt6_39",ce="_tags_group_2ivt6_48",pe="_tag_badge_2ivt6_54",ue="_tag_icon_2ivt6_59",m={tag:ne,tag_text:re,error:se,info:oe,warning:ie,success:le,tag_small:me,tags_group:ce,tag_badge:pe,tag_icon:ue},de=15,a=({avatar:t,badge:p,icon:R,size:h,text:g,color:w,onRemove:b,removeLabel:X,...J})=>{let _=g,q=e.jsx("span",{className:m.tag_text,children:g});g.length>de&&(_=`${g.substring(0,16)}...`,q=e.jsx(te,{title:g,children:e.jsx("span",{className:m.tag_text,children:_})}));const K=w?m[w]:"";let v;return!ee.isValidElement(p)&&typeof p=="object"?v=e.jsx(x,{...p}):v=p,e.jsxs("span",{className:Y(m.tag,{[m.tag_small]:h==="s",[K]:w}),...J,children:[R&&e.jsx("span",{className:m.tag_icon,children:R}),t,q,v&&e.jsx("span",{className:m.tag_badge,children:v}),b&&e.jsx(ae,{onClick:b,label:X||"remove",size:h?"xs":"s"})]})};a.__docgenInfo={description:"",methods:[],displayName:"Tag",props:{onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},avatar:{required:!1,tsType:{name:"ReactNode"},description:""},icon:{required:!1,tsType:{name:"ReactNode"},description:""},badge:{required:!1,tsType:{name:"union",raw:"BadgeProps | React.ReactElement<typeof Badge>",elements:[{name:"intersection",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
} & Omit<HTMLSpanProps, "type" | "color" | "text">`,elements:[{name:"signature",type:"object",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:'"dot" | "number"',elements:[{name:"literal",value:'"dot"'},{name:"literal",value:'"number"'}],required:!1}},{key:"color",value:{name:"union",raw:'"info" | "success" | "warning" | "danger"',elements:[{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'}],required:!1}},{key:"text",value:{name:"string",required:!1}}]}},{name:"Omit",elements:[{name:"intersection",raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style"> & DataAttributes',elements:[{name:"Omit",elements:[{name:"ComponentPropsWithoutRef",elements:[{name:"literal",value:'"span"'}],raw:'ComponentPropsWithoutRef<"span">'},{name:"union",raw:'"className" | "style"',elements:[{name:"literal",value:'"className"'},{name:"literal",value:'"style"'}]}],raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style">'},{name:"Record",elements:[{name:"literal",value:"`data-${string}`"},{name:"string"}],raw:"Record<`data-${string}`, string>"}]},{name:"union",raw:'"type" | "color" | "text"',elements:[{name:"literal",value:'"type"'},{name:"literal",value:'"color"'},{name:"literal",value:'"text"'}]}],raw:'Omit<HTMLSpanProps, "type" | "color" | "text">'}]},{name:"ReactReactElement",raw:"React.ReactElement<typeof Badge>",elements:[{name:"Badge"}]}]},description:""},removeLabel:{required:!1,tsType:{name:"string"},description:""},text:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"literal",value:'"s"'},description:""},color:{required:!1,tsType:{name:"union",raw:'"error" | "info" | "success" | "warning"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'}]},description:""}}};const y=({children:t,...p})=>e.jsx("div",{className:m.tags_group,...p,children:t});y.__docgenInfo={description:"",methods:[],displayName:"TagGroups"};const ge={title:"Components/Tag",component:a},d={chromatic:{disableSnapshot:!0}},f={text:{control:{type:"text"}},color:{control:{type:"select"},options:[void 0,"error","info","success","warning"]},size:{control:{type:"select"},options:[void 0,"s"]},onRemove:{table:{disable:!0}}},n=t=>e.jsx(c,{p:"m","data-testid":"wrapper",width:"fit-content",children:e.jsx(a,{...t})});n.args={text:"Tag",onRemove:void 0};n.argTypes={...f};n.parameters={...T("tag"),...d};const r=t=>e.jsxs(y,{children:[e.jsx(a,{...t}),e.jsx(a,{...t}),e.jsx(a,{...t}),e.jsx(a,{...t})]});r.args=n.args;r.argTypes=n.argTypes;r.parameters={...T("tag","group"),...d};const s=t=>e.jsx(c,{p:"m","data-testid":"wrapper",width:"fit-content",children:e.jsx(a,{...t})});s.args={text:"Tag",onRemove:Q()};s.argTypes={text:n.argTypes.text,size:n.argTypes.size,onRemove:n.argTypes.onRemove};s.parameters={...T("tag","removable"),...d};const o=t=>e.jsx(c,{p:"m","data-testid":"wrapper",width:"fit-content",children:e.jsx(a,{...t,avatar:e.jsx(U,{size:"s",text:"OC"})})});o.args={text:"Olivier Carnac"};o.argTypes={...f};o.parameters=d;const F=()=>e.jsxs("svg",{width:"16",height:"16",viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[e.jsx("g",{clipPath:"url(#clip0_20897_69)",children:e.jsx("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M9.3 9.7L9 10H8V12H6V14H4V16H0V13L6.3 6.7C6.1 6.2 6 5.6 6 5C6 2.2 8.2 0 11 0C13.8 0 16 2.2 16 5C16 7.8 13.8 10 11 10C10.4 10 9.8 9.9 9.3 9.7ZM7 9H8.58579L9.05916 8.52663L9.67139 8.77152C10.0316 8.91559 10.5015 9 11 9C13.2477 9 15 7.24771 15 5C15 2.75228 13.2477 1 11 1C8.75229 1 7 2.75228 7 5C7 5.49845 7.08441 5.96843 7.22848 6.32861L7.47337 6.94084L1 13.4142V15H3V13H5V11H7V9ZM12 5C11.4667 5 11 4.53333 11 4C11 3.46667 11.4667 3 12 3C12.5333 3 13 3.46667 13 4C13 4.53333 12.5333 5 12 5Z",fill:"currentColor"})}),e.jsx("defs",{children:e.jsx("clipPath",{id:"clip0_20897_69",children:e.jsx("rect",{width:"16",height:"16",fill:"white"})})})]}),i=t=>e.jsx(c,{p:"m","data-testid":"wrapper",width:"fit-content",children:e.jsx(a,{...t,icon:e.jsx(F,{})})});i.args={text:"ABCD-1234-EFGH-5678"};i.argTypes={...f};i.parameters=d;const l=t=>e.jsx(c,{p:"m","data-testid":"wrapper",width:"fit-content",children:e.jsx(a,{...t,badge:e.jsx(x,{text:"14",type:"number"})})});l.args={text:"App"};l.argTypes={...f};l.parameters=d;const u=()=>e.jsxs(c,{gap:"s",direction:"col",children:[e.jsxs(y,{children:[e.jsx(a,{text:"Tag"}),e.jsx(a,{text:"Tag error",color:"error"}),e.jsx(a,{text:"Tag info",color:"info"}),e.jsx(a,{text:"Tag success",color:"success"}),e.jsx(a,{text:"Tag warning",color:"warning"})]}),e.jsxs(y,{children:[e.jsx(a,{text:"onRemove",onRemove:()=>{}}),e.jsx(a,{text:"onRemove error",color:"error",onRemove:()=>{}}),e.jsx(a,{text:"onRemoveInfo",color:"info",onRemove:()=>{}}),e.jsx(a,{text:"onRemoveSuccess",color:"success",onRemove:()=>{}}),e.jsx(a,{text:"onRemoveWarning",color:"warning",onRemove:()=>{}})]}),e.jsx(a,{text:"With icon",icon:e.jsx(F,{})}),e.jsxs(c,{gap:"s",children:[e.jsx(a,{text:"With badge",badge:e.jsx(x,{text:"14",type:"number"})}),e.jsx(a,{text:"Apps",badge:{text:"14",type:"number",color:"info"}}),e.jsx(a,{text:"Boolean",color:"success",badge:{text:"true",type:"number",color:"success"}})]})]});n.__docgenInfo={description:"",methods:[],displayName:"Playground",props:{onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},avatar:{required:!1,tsType:{name:"ReactNode"},description:""},icon:{required:!1,tsType:{name:"ReactNode"},description:""},badge:{required:!1,tsType:{name:"union",raw:"BadgeProps | React.ReactElement<typeof Badge>",elements:[{name:"intersection",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
} & Omit<HTMLSpanProps, "type" | "color" | "text">`,elements:[{name:"signature",type:"object",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:'"dot" | "number"',elements:[{name:"literal",value:'"dot"'},{name:"literal",value:'"number"'}],required:!1}},{key:"color",value:{name:"union",raw:'"info" | "success" | "warning" | "danger"',elements:[{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'}],required:!1}},{key:"text",value:{name:"string",required:!1}}]}},{name:"Omit",elements:[{name:"intersection",raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style"> & DataAttributes',elements:[{name:"Omit",elements:[{name:"ComponentPropsWithoutRef",elements:[{name:"literal",value:'"span"'}],raw:'ComponentPropsWithoutRef<"span">'},{name:"union",raw:'"className" | "style"',elements:[{name:"literal",value:'"className"'},{name:"literal",value:'"style"'}]}],raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style">'},{name:"Record",elements:[{name:"literal",value:"`data-${string}`"},{name:"string"}],raw:"Record<`data-${string}`, string>"}]},{name:"union",raw:'"type" | "color" | "text"',elements:[{name:"literal",value:'"type"'},{name:"literal",value:'"color"'},{name:"literal",value:'"text"'}]}],raw:'Omit<HTMLSpanProps, "type" | "color" | "text">'}]},{name:"ReactReactElement",raw:"React.ReactElement<typeof Badge>",elements:[{name:"Badge"}]}]},description:""},removeLabel:{required:!1,tsType:{name:"string"},description:""},text:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"literal",value:'"s"'},description:""},color:{required:!1,tsType:{name:"union",raw:'"error" | "info" | "success" | "warning"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'}]},description:""}}};r.__docgenInfo={description:"",methods:[],displayName:"GroupPlayground",props:{onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},avatar:{required:!1,tsType:{name:"ReactNode"},description:""},icon:{required:!1,tsType:{name:"ReactNode"},description:""},badge:{required:!1,tsType:{name:"union",raw:"BadgeProps | React.ReactElement<typeof Badge>",elements:[{name:"intersection",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
} & Omit<HTMLSpanProps, "type" | "color" | "text">`,elements:[{name:"signature",type:"object",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:'"dot" | "number"',elements:[{name:"literal",value:'"dot"'},{name:"literal",value:'"number"'}],required:!1}},{key:"color",value:{name:"union",raw:'"info" | "success" | "warning" | "danger"',elements:[{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'}],required:!1}},{key:"text",value:{name:"string",required:!1}}]}},{name:"Omit",elements:[{name:"intersection",raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style"> & DataAttributes',elements:[{name:"Omit",elements:[{name:"ComponentPropsWithoutRef",elements:[{name:"literal",value:'"span"'}],raw:'ComponentPropsWithoutRef<"span">'},{name:"union",raw:'"className" | "style"',elements:[{name:"literal",value:'"className"'},{name:"literal",value:'"style"'}]}],raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style">'},{name:"Record",elements:[{name:"literal",value:"`data-${string}`"},{name:"string"}],raw:"Record<`data-${string}`, string>"}]},{name:"union",raw:'"type" | "color" | "text"',elements:[{name:"literal",value:'"type"'},{name:"literal",value:'"color"'},{name:"literal",value:'"text"'}]}],raw:'Omit<HTMLSpanProps, "type" | "color" | "text">'}]},{name:"ReactReactElement",raw:"React.ReactElement<typeof Badge>",elements:[{name:"Badge"}]}]},description:""},removeLabel:{required:!1,tsType:{name:"string"},description:""},text:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"literal",value:'"s"'},description:""},color:{required:!1,tsType:{name:"union",raw:'"error" | "info" | "success" | "warning"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'}]},description:""}}};s.__docgenInfo={description:"",methods:[],displayName:"Removable",props:{onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},avatar:{required:!1,tsType:{name:"ReactNode"},description:""},icon:{required:!1,tsType:{name:"ReactNode"},description:""},badge:{required:!1,tsType:{name:"union",raw:"BadgeProps | React.ReactElement<typeof Badge>",elements:[{name:"intersection",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
} & Omit<HTMLSpanProps, "type" | "color" | "text">`,elements:[{name:"signature",type:"object",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:'"dot" | "number"',elements:[{name:"literal",value:'"dot"'},{name:"literal",value:'"number"'}],required:!1}},{key:"color",value:{name:"union",raw:'"info" | "success" | "warning" | "danger"',elements:[{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'}],required:!1}},{key:"text",value:{name:"string",required:!1}}]}},{name:"Omit",elements:[{name:"intersection",raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style"> & DataAttributes',elements:[{name:"Omit",elements:[{name:"ComponentPropsWithoutRef",elements:[{name:"literal",value:'"span"'}],raw:'ComponentPropsWithoutRef<"span">'},{name:"union",raw:'"className" | "style"',elements:[{name:"literal",value:'"className"'},{name:"literal",value:'"style"'}]}],raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style">'},{name:"Record",elements:[{name:"literal",value:"`data-${string}`"},{name:"string"}],raw:"Record<`data-${string}`, string>"}]},{name:"union",raw:'"type" | "color" | "text"',elements:[{name:"literal",value:'"type"'},{name:"literal",value:'"color"'},{name:"literal",value:'"text"'}]}],raw:'Omit<HTMLSpanProps, "type" | "color" | "text">'}]},{name:"ReactReactElement",raw:"React.ReactElement<typeof Badge>",elements:[{name:"Badge"}]}]},description:""},removeLabel:{required:!1,tsType:{name:"string"},description:""},text:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"literal",value:'"s"'},description:""},color:{required:!1,tsType:{name:"union",raw:'"error" | "info" | "success" | "warning"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'}]},description:""}}};o.__docgenInfo={description:"",methods:[],displayName:"WithAvatar",props:{onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},avatar:{required:!1,tsType:{name:"ReactNode"},description:""},icon:{required:!1,tsType:{name:"ReactNode"},description:""},badge:{required:!1,tsType:{name:"union",raw:"BadgeProps | React.ReactElement<typeof Badge>",elements:[{name:"intersection",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
} & Omit<HTMLSpanProps, "type" | "color" | "text">`,elements:[{name:"signature",type:"object",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:'"dot" | "number"',elements:[{name:"literal",value:'"dot"'},{name:"literal",value:'"number"'}],required:!1}},{key:"color",value:{name:"union",raw:'"info" | "success" | "warning" | "danger"',elements:[{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'}],required:!1}},{key:"text",value:{name:"string",required:!1}}]}},{name:"Omit",elements:[{name:"intersection",raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style"> & DataAttributes',elements:[{name:"Omit",elements:[{name:"ComponentPropsWithoutRef",elements:[{name:"literal",value:'"span"'}],raw:'ComponentPropsWithoutRef<"span">'},{name:"union",raw:'"className" | "style"',elements:[{name:"literal",value:'"className"'},{name:"literal",value:'"style"'}]}],raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style">'},{name:"Record",elements:[{name:"literal",value:"`data-${string}`"},{name:"string"}],raw:"Record<`data-${string}`, string>"}]},{name:"union",raw:'"type" | "color" | "text"',elements:[{name:"literal",value:'"type"'},{name:"literal",value:'"color"'},{name:"literal",value:'"text"'}]}],raw:'Omit<HTMLSpanProps, "type" | "color" | "text">'}]},{name:"ReactReactElement",raw:"React.ReactElement<typeof Badge>",elements:[{name:"Badge"}]}]},description:""},removeLabel:{required:!1,tsType:{name:"string"},description:""},text:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"literal",value:'"s"'},description:""},color:{required:!1,tsType:{name:"union",raw:'"error" | "info" | "success" | "warning"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'}]},description:""}}};i.__docgenInfo={description:"",methods:[],displayName:"WithIcon",props:{onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},avatar:{required:!1,tsType:{name:"ReactNode"},description:""},icon:{required:!1,tsType:{name:"ReactNode"},description:""},badge:{required:!1,tsType:{name:"union",raw:"BadgeProps | React.ReactElement<typeof Badge>",elements:[{name:"intersection",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
} & Omit<HTMLSpanProps, "type" | "color" | "text">`,elements:[{name:"signature",type:"object",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:'"dot" | "number"',elements:[{name:"literal",value:'"dot"'},{name:"literal",value:'"number"'}],required:!1}},{key:"color",value:{name:"union",raw:'"info" | "success" | "warning" | "danger"',elements:[{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'}],required:!1}},{key:"text",value:{name:"string",required:!1}}]}},{name:"Omit",elements:[{name:"intersection",raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style"> & DataAttributes',elements:[{name:"Omit",elements:[{name:"ComponentPropsWithoutRef",elements:[{name:"literal",value:'"span"'}],raw:'ComponentPropsWithoutRef<"span">'},{name:"union",raw:'"className" | "style"',elements:[{name:"literal",value:'"className"'},{name:"literal",value:'"style"'}]}],raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style">'},{name:"Record",elements:[{name:"literal",value:"`data-${string}`"},{name:"string"}],raw:"Record<`data-${string}`, string>"}]},{name:"union",raw:'"type" | "color" | "text"',elements:[{name:"literal",value:'"type"'},{name:"literal",value:'"color"'},{name:"literal",value:'"text"'}]}],raw:'Omit<HTMLSpanProps, "type" | "color" | "text">'}]},{name:"ReactReactElement",raw:"React.ReactElement<typeof Badge>",elements:[{name:"Badge"}]}]},description:""},removeLabel:{required:!1,tsType:{name:"string"},description:""},text:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"literal",value:'"s"'},description:""},color:{required:!1,tsType:{name:"union",raw:'"error" | "info" | "success" | "warning"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'}]},description:""}}};l.__docgenInfo={description:"",methods:[],displayName:"WithBadge",props:{onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},avatar:{required:!1,tsType:{name:"ReactNode"},description:""},icon:{required:!1,tsType:{name:"ReactNode"},description:""},badge:{required:!1,tsType:{name:"union",raw:"BadgeProps | React.ReactElement<typeof Badge>",elements:[{name:"intersection",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
} & Omit<HTMLSpanProps, "type" | "color" | "text">`,elements:[{name:"signature",type:"object",raw:`{
  type?: "dot" | "number";
  color?: "info" | "success" | "warning" | "danger";
  text?: string;
}`,signature:{properties:[{key:"type",value:{name:"union",raw:'"dot" | "number"',elements:[{name:"literal",value:'"dot"'},{name:"literal",value:'"number"'}],required:!1}},{key:"color",value:{name:"union",raw:'"info" | "success" | "warning" | "danger"',elements:[{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'}],required:!1}},{key:"text",value:{name:"string",required:!1}}]}},{name:"Omit",elements:[{name:"intersection",raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style"> & DataAttributes',elements:[{name:"Omit",elements:[{name:"ComponentPropsWithoutRef",elements:[{name:"literal",value:'"span"'}],raw:'ComponentPropsWithoutRef<"span">'},{name:"union",raw:'"className" | "style"',elements:[{name:"literal",value:'"className"'},{name:"literal",value:'"style"'}]}],raw:'Omit<ComponentPropsWithoutRef<"span">, "className" | "style">'},{name:"Record",elements:[{name:"literal",value:"`data-${string}`"},{name:"string"}],raw:"Record<`data-${string}`, string>"}]},{name:"union",raw:'"type" | "color" | "text"',elements:[{name:"literal",value:'"type"'},{name:"literal",value:'"color"'},{name:"literal",value:'"text"'}]}],raw:'Omit<HTMLSpanProps, "type" | "color" | "text">'}]},{name:"ReactReactElement",raw:"React.ReactElement<typeof Badge>",elements:[{name:"Badge"}]}]},description:""},removeLabel:{required:!1,tsType:{name:"string"},description:""},text:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"literal",value:'"s"'},description:""},color:{required:!1,tsType:{name:"union",raw:'"error" | "info" | "success" | "warning"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"info"'},{name:"literal",value:'"success"'},{name:"literal",value:'"warning"'}]},description:""}}};u.__docgenInfo={description:"",methods:[],displayName:"VisualTests"};var P,j,N;n.parameters={...n.parameters,docs:{...(P=n.parameters)==null?void 0:P.docs,source:{originalSource:`(props: TagProps) => <Box p="m" data-testid="wrapper" width="fit-content">
    <Tag {...props} />
  </Box>`,...(N=(j=n.parameters)==null?void 0:j.docs)==null?void 0:N.source}}};var B,C,O;r.parameters={...r.parameters,docs:{...(B=r.parameters)==null?void 0:B.docs,source:{originalSource:`(props: TagProps) => <TagGroups>
    <Tag {...props} />
    <Tag {...props} />
    <Tag {...props} />
    <Tag {...props} />
  </TagGroups>`,...(O=(C=r.parameters)==null?void 0:C.docs)==null?void 0:O.source}}};var W,S,E;s.parameters={...s.parameters,docs:{...(W=s.parameters)==null?void 0:W.docs,source:{originalSource:`(props: TagProps) => <Box p="m" data-testid="wrapper" width="fit-content">
    <Tag {...props} />
  </Box>`,...(E=(S=s.parameters)==null?void 0:S.docs)==null?void 0:E.source}}};var L,H,k;o.parameters={...o.parameters,docs:{...(L=o.parameters)==null?void 0:L.docs,source:{originalSource:`(args: TagProps) => <Box p="m" data-testid="wrapper" width="fit-content">
    <Tag {...args} avatar={<Avatar size="s" text="OC" />} />
  </Box>`,...(k=(H=o.parameters)==null?void 0:H.docs)==null?void 0:k.source}}};var I,M,A;i.parameters={...i.parameters,docs:{...(I=i.parameters)==null?void 0:I.docs,source:{originalSource:`(args: TagProps) => <Box p="m" data-testid="wrapper" width="fit-content">
    <Tag {...args} icon={<Icon />} />
  </Box>`,...(A=(M=i.parameters)==null?void 0:M.docs)==null?void 0:A.source}}};var $,z,G;l.parameters={...l.parameters,docs:{...($=l.parameters)==null?void 0:$.docs,source:{originalSource:`(args: TagProps) => <Box p="m" data-testid="wrapper" width="fit-content">
    <Tag {...args} badge={<Badge text="14" type="number" />} />
  </Box>`,...(G=(z=l.parameters)==null?void 0:z.docs)==null?void 0:G.source}}};var V,D,Z;u.parameters={...u.parameters,docs:{...(V=u.parameters)==null?void 0:V.docs,source:{originalSource:`() => <Box gap="s" direction="col">
    <TagGroups>
      <Tag text="Tag" />
      <Tag text="Tag error" color="error" />
      <Tag text="Tag info" color="info" />
      <Tag text="Tag success" color="success" />
      <Tag text="Tag warning" color="warning" />
    </TagGroups>
    <TagGroups>
      <Tag text="onRemove" onRemove={() => {}} />
      <Tag text="onRemove error" color="error" onRemove={() => {}} />
      <Tag text="onRemoveInfo" color="info" onRemove={() => {}} />
      <Tag text="onRemoveSuccess" color="success" onRemove={() => {}} />
      <Tag text="onRemoveWarning" color="warning" onRemove={() => {}} />
    </TagGroups>
    <Tag text="With icon" icon={<Icon />} />
    <Box gap="s">
      <Tag text="With badge" badge={<Badge text="14" type="number" />} />
      <Tag text="Apps" badge={{
      text: "14",
      type: "number",
      color: "info"
    }} />
      <Tag text="Boolean" color="success" badge={{
      text: "true",
      type: "number",
      color: "success"
    }} />
    </Box>
  </Box>`,...(Z=(D=u.parameters)==null?void 0:D.docs)==null?void 0:Z.source}}};const ve=["Playground","GroupPlayground","Removable","WithAvatar","WithIcon","WithBadge","VisualTests"],qe=Object.freeze(Object.defineProperty({__proto__:null,GroupPlayground:r,Playground:n,Removable:s,VisualTests:u,WithAvatar:o,WithBadge:l,WithIcon:i,__namedExportsOrder:ve,default:ge},Symbol.toStringTag,{value:"Module"}));export{n as P,qe as S};
